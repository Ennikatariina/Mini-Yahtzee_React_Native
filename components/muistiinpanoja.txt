export default function Gameboard(){

    const [nbrOfThrowsLeft, setNbrOfThrowsLeft] = useState(NBR_OF_THROWS)
    const [nbrOfWins, setNBrOfWins] = useState(0)
    const [sum, setSum] = useState(0)
    const [status, setStatus] =useState('')

    const row=[]
    for (let i=0; i <NBR_OF_DICES; i++){
        row.push(
            <MaterialCommunityIcons
              name={board[i]}
              key={"row" + i}
              size={50} 
              color={"steelblue"}>
            </MaterialCommunityIcons>
          );
    }

    useEffect(()=>{
        checkWinner()
        if (nbrOfThrowsLeft ===NBR_OF_THROWS){
            setStatus('Game has not started')
        }
        if (nbrOfThrowsLeft<0){
            setNbrOfThrowsLeft(NBR_OF_THROWS-1)
            setNBrOfWins(0)
        }
    },[nbrOfThrowsLeft])


    const throwDices=() =>{
        let sum =0
        for(let i=0; i <NBR_OF_DICES;  i++){
            let randomNumber = Math.floor(Math.random()*6+1)
            board[i]='dice-' + randomNumber
            sum+=randomNumber
        }
        setNbrOfThrowsLeft(nbrOfThrowsLeft-1)
        setSum(sum)
    }

    const checkWinner=() =>{
        if (sum >= WINING_POINTS && nbrOfThrowsLeft>0){
            setNBrOfWins(nbrOfWins+1)
            setStatus('You won')
        }
        else if (sum >= WINING_POINTS && nbrOfThrowsLeft===0){
            setNBrOfWins(nbrOfWins+1)
            setStatus('You won, game over')
        }
        else if (nbrOfWins>0 && nbrOfThrowsLeft===0){
            setStatus('You won, game over')
        }
        else if (nbrOfThrowsLeft===0){
            setStatus('Game over')
        }
        else {
            setStatus('Keep on throwing')
        }
    }


    return(
        <View style={styles.gameboard}>
            <View style={styles.flex}>{row}</View>
            <Text style={styles.gameinfo}>Sum:{sum}</Text>
            <Text style={styles.gameinfo}>Throws left: {nbrOfThrowsLeft}</Text>
            <Text style={styles.gameinfo}>Nbr of wins :{nbrOfWins}</Text>
            <Text style={styles.gameinfo}>{status}</Text>
            <Pressable style={styles.button}
                onPress={()=> throwDices()}>
                    <Text style={styles.buttonText}>Throw dices</Text>
                </Pressable>
        </View>
    )
}







const allPointsSelected = selectedPoints.every((pointSelected) => pointSelected);
                console.log("allPoint "+allPointsSelected) 
                if (allPointsSelected) {
                // Kaikki pisteet ovat valittu
                    setTimeout(()=>{setGameEndStatus(true)}, 0)
                    console.log("GameEndStatus fumtiossa " +gameEndStatus)



                    const allPointsSelected = selectedDicePoints.every((pointSelected) => pointSelected);
        setTesti(allPointsSelected)
        console.log("checkGameEndStatus" + allPointsSelected)
        if (allPointsSelected) {
            // Kaikki pisteet ovat valittu
            setGameEndStatus(true);
        }
        console.log("checkGameEndStatus gameEndStatus "+ gameEndStatus)